// Bachelor of Software Engineering 
// Media Design School 
// Auckland 
// New Zealand 
// (c) Media Design School
// File Name : Cloud.frag
// Author : William Inman
// Mail : william.inman@mds.ac.nz

#version 460 core

#define WORK_GROUP_SIZE 128

layout(local_size_x = WORK_GROUP_SIZE, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) buffer positionBuffer{vec4 position[]; };
layout(std430, binding = 1) buffer velocityBuffer{vec4 velocity[]; };
layout(std430, binding = 2) buffer initVelocityBuffer{vec4 initVelocity[]; };

#define TWOPI 6.28318531

uniform float DeltaTime;
uniform float Gravity;
uniform float Lifetime;

// Main function that gets called per vertex fragment.
void main()
{
	uint i = gl_GlobalInvocationID.x;

	vec3 gravity = vec3(0.0f, -Gravity, 0.0f);
	velocity[i].xyz += gravity * DeltaTime;

	position[i].xyz += velocity[i].xyz;
	position[i].w -= DeltaTime;

	if (position[i].w <= 0.0f)
	{
		position[i].xyzw = vec4(0.0f,0.0f,0.0f, initVelocity[i].w);
		velocity[i] = initVelocity[i];
	}
}